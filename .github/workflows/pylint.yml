name: PyLint

on:
  pull_request_target:
    types:
      - opened
      - edited
      - reopened
      - synchronize
    branches:
      - master
  workflow_call:

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.x"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      # This is the version of the action for setting up Python, not the Python version.
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install pylint
    - name: Version check
      run: |
        pylint --version
    - name: Get/Export current directory
      run: |
        pwd
        export PYTHONPATH=$PYTHONPATH:./codewars
    - name: Check to make sure that the module is in your Python path
      run: |
        echo $PYTHONPATH
    - name: Analysing the code with pylint
      run: |
        python -m pylint $(git ls-files '*.py')