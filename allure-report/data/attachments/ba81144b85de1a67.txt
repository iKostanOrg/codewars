[1, 3, 2, 5, 7, 9, 4, 6, 8]
[4, 9, 8, 2, 6, 1, 3, 7, 5]
[7, 5, 6, 3, 8, 4, 2, 1, 9]
[6, 4, 3, 1, 5, 8, 7, 9, 2]
[5, 2, 1, 7, 9, 3, 8, 4, 6]
[9, 8, 7, 4, 2, 6, 5, 3, 1]
[2, 1, 4, 9, 3, 5, 6, 8, 7]
[3, 6, 5, 8, 1, 7, 9, 2, 4]
[8, 7, 9, 6, 4, 2, 1, 5, 3]
Step: 3

a: 0, start: 0, end: 3
a: 1, start: 0, end: 3
a: 2, start: 0, end: 3
[1, 3, 2, 4, 9, 8, 7, 5, 6]
a: 3, start: 0, end: 3
a: 4, start: 0, end: 3
a: 5, start: 0, end: 3
[6, 4, 3, 5, 2, 1, 9, 8, 7]
a: 6, start: 0, end: 3
a: 7, start: 0, end: 3
a: 8, start: 0, end: 3
[2, 1, 4, 3, 6, 5, 8, 7, 9]

a: 0, start: 3, end: 6
a: 1, start: 3, end: 6
a: 2, start: 3, end: 6
[5, 7, 9, 2, 6, 1, 3, 8, 4]
a: 3, start: 3, end: 6
a: 4, start: 3, end: 6
a: 5, start: 3, end: 6
[1, 5, 8, 7, 9, 3, 4, 2, 6]
a: 6, start: 3, end: 6
a: 7, start: 3, end: 6
a: 8, start: 3, end: 6
[9, 3, 5, 8, 1, 7, 6, 4, 2]

a: 0, start: 6, end: 9
a: 1, start: 6, end: 9
a: 2, start: 6, end: 9
[4, 6, 8, 3, 7, 5, 2, 1, 9]
a: 3, start: 6, end: 9
a: 4, start: 6, end: 9
a: 5, start: 6, end: 9
[7, 9, 2, 8, 4, 6, 5, 3, 1]
a: 6, start: 6, end: 9
a: 7, start: 6, end: 9
a: 8, start: 6, end: 9
[6, 8, 7, 9, 2, 4, 1, 5, 3]

LOG =>
expected: Finished!,
result: Finished!

assert_sudoku_by_column

LOG =>
expected: Try again!,
result: Try again!

[1, 2, 3, 4, 5, 6, 7, 8, 9]
[2, 3, 4, 5, 6, 7, 8, 9, 1]
[3, 4, 5, 6, 7, 8, 9, 1, 2]
[4, 5, 6, 7, 8, 9, 1, 2, 3]
[5, 6, 7, 8, 9, 1, 2, 3, 4]
[6, 7, 8, 9, 1, 2, 3, 4, 5]
[7, 8, 9, 1, 2, 3, 4, 5, 6]
[8, 9, 1, 2, 3, 4, 5, 6, 7]
[9, 1, 2, 3, 4, 5, 6, 7, 8]
Step: 3

a: 0, start: 0, end: 3
a: 1, start: 0, end: 3
a: 2, start: 0, end: 3
[1, 2, 3, 2, 3, 4, 3, 4, 5]
{1, 2, 3, 4, 5}
assert_sudoku_by_region

LOG =>
expected: Try again!,
result: Try again!

