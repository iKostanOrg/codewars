{"uid":"4fd74111bf95a7d0","name":"Testing done_or_not function","fullName":"kyu_5.tic_tac_toe_checker.test_checker.IsSolvedTestCase#test_is_solved_4","historyId":"b2d3e78abc5509a188586111623b5e8c","time":{"start":1735735404150,"stop":1735735404150,"duration":0},"description":"Testing is_solved function with various test data [with board=[[1, 2, 0], [0, 1, 2], [0, 0, 1]], expected=1, message='wining diagonal'].\n\n        The function should return whether the\n        board's current state is solved.\n\n        We want our function to return:\n\n            -1 if the board is not yet finished (there are empty spots),\n            1 if \"X\" won,\n            2 if \"O\" won,\n            0 if it's a cat's game (i.e. a draw).\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>The function should return whether the board's current state is solved.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_IsSolvedTestCase","time":{"start":1735735404131,"stop":1735735404131,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing is_solved function with various test data [with board=[[1, 2, 0], [0, 1, 2], [0, 0, 1]], expected=1, message='wining diagonal'].\n\n        The function should return whether the\n        board's current state is solved.\n\n        We want our function to return:\n\n            -1 if the board is not yet finished (there are empty spots),\n            1 if \"X\" won,\n            2 if \"O\" won,\n            0 if it's a cat's game (i.e. a draw).\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>The function should return whether the board's current state is solved.</p>","status":"passed","steps":[{"name":"Enter Tic-Tac-Toe board [[1, 2, 0], [0, 1, 2], [0, 0, 1]] and verify the output 1.","time":{"start":1735735404150,"stop":1735735404150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"a0997e5920830d80","name":"stdout","source":"a0997e5920830d80.txt","type":"text/plain","size":58}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_IsSolvedTestCase::0","time":{"start":1735735404150,"stop":1735735404150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"ALGORITHMS"},{"name":"subSuite","value":"Unit Tests"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ARRAY"},{"name":"suite","value":"Algorithms"},{"name":"story","value":"Tic-Tac-Toe Checker"},{"name":"epic","value":"5 kyu"},{"name":"feature","value":"Lists"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"11700-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.tic_tac_toe_checker.test_checker"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/525caa5c1bf619d28c000335","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["ARRAY","ALGORITHMS"]},"source":"4fd74111bf95a7d0.json","parameterValues":[]}