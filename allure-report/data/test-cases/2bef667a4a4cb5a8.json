{"uid":"2bef667a4a4cb5a8","name":"Testing the 'find_missing_number' function","fullName":"kyu_6.number_zoo_patrol.test_find_missing_number.FindMissingNumberTestCase#test_find_missing_number_4","historyId":"75f2ee1811701e43a73620a480ad2457","time":{"start":1735735773917,"stop":1735735773917,"duration":0},"description":"Testing 'find_missing_number' function with various test data [with numbers=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ...4, 495, 496, 497, 498, 499, 500], expected=36].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing 'find_missing_number' function with various test data [with numbers=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ...4, 495, 496, 497, 498, 499, 500], expected=36].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","steps":[{"name":"Enter a list and verify the expected output: 36 vs actual result: 36","time":{"start":1735735773917,"stop":1735735773917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"f231fe2047bc3620","name":"stdout","source":"f231fe2047bc3620.txt","type":"text/plain","size":2429}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase::0","time":{"start":1735735773917,"stop":1735735773917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"NUMBERS"},{"name":"story","value":"Number Zoo Patrol"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"PERFORMANCE"},{"name":"feature","value":"Math"},{"name":"subSuite","value":"Unit Tests"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"6 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"MATHEMATICS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_6.number_zoo_patrol.test_find_missing_number"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/5276c18121e20900c0000235","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"70b82506ee0280cb","status":"passed","time":{"start":1735735405457,"stop":1735735405457,"duration":0}},{"uid":"ca799d58d69cec6","status":"passed","time":{"start":1735230834690,"stop":1735230834691,"duration":1}},{"uid":"26549413fa1cd21d","status":"passed","time":{"start":1735219695671,"stop":1735219695672,"duration":1}},{"uid":"11f28a89dbe2bf0e","status":"passed","time":{"start":1735219151642,"stop":1735219151643,"duration":1}},{"uid":"f74ae4d72eeea6aa","status":"passed","time":{"start":1735218480282,"stop":1735218480283,"duration":1}},{"uid":"4df96d9ab198d02b","status":"passed","time":{"start":1735146793750,"stop":1735146793750,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"c8180bfbedc42339","status":"passed","time":{"start":1735735405457,"stop":1735735405457,"duration":0}},{"uid":"75bf6ebb199c55ee","status":"passed","time":{"start":1735230834690,"stop":1735230834691,"duration":1}},{"uid":"c5bee7267ac0f5b","status":"passed","time":{"start":1735219695671,"stop":1735219695672,"duration":1}},{"uid":"f071d482be6e7759","status":"passed","time":{"start":1735218480282,"stop":1735218480283,"duration":1}},{"uid":"b45a29be94932342","status":"passed","time":{"start":1735146793750,"stop":1735146793750,"duration":0}}]},"tags":["MATHEMATICS","NUMBERS","PERFORMANCE","ALGORITHMS"]},"source":"2bef667a4a4cb5a8.json","parameterValues":[]}