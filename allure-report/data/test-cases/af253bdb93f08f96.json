{"uid":"af253bdb93f08f96","name":"Testing list_squared function","fullName":"kyu_5.integers_recreation_one.test_list_squared.ListSquaredTestCase#test_flatten_0","historyId":"1cb63cf07c41dac776ecb6fda1e1e95e","time":{"start":1735735771959,"stop":1735735771962,"duration":3},"description":"Testing list_squared function [with m=1, n=250, expected=[[1, 1], [42, 2500], [246, 84100]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase","time":{"start":1735735771959,"stop":1735735771959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing list_squared function [with m=1, n=250, expected=[[1, 1], [42, 2500], [246, 84100]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","steps":[{"name":"Enter test data and verify the output...","time":{"start":1735735771959,"stop":1735735771962,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"931cc85d0752a3b5","name":"stdout","source":"931cc85d0752a3b5.txt","type":"text/plain","size":119}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase::0","time":{"start":1735735772111,"stop":1735735772111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Optimization"},{"name":"story","value":"Integers: Recreation One"},{"name":"tag","value":"OPTIMIZATION"},{"name":"subSuite","value":"Unit Tests"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ARRAYS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.integers_recreation_one.test_list_squared"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/55aa075506463dac6600010d","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"60be011eb62b4586","status":"passed","time":{"start":1735735403627,"stop":1735735403629,"duration":2}},{"uid":"df4cd539f7ca2ffa","status":"passed","time":{"start":1735230832877,"stop":1735230832879,"duration":2}},{"uid":"63e77eef20566beb","status":"passed","time":{"start":1735219693880,"stop":1735219693882,"duration":2}},{"uid":"b373329f6b5597a7","status":"passed","time":{"start":1735219149808,"stop":1735219149809,"duration":1}},{"uid":"6e1bc51f4193788f","status":"passed","time":{"start":1735218478692,"stop":1735218478695,"duration":3}},{"uid":"ce79a4688f3fcaf6","status":"passed","time":{"start":1735146789363,"stop":1735146789375,"duration":12}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"9a0754c8a1e64de2","status":"passed","time":{"start":1735735403627,"stop":1735735403629,"duration":2}},{"uid":"e1f21b2b4d0458ea","status":"passed","time":{"start":1735230832877,"stop":1735230832879,"duration":2}},{"uid":"728637f6d59339e8","status":"passed","time":{"start":1735219693880,"stop":1735219693882,"duration":2}},{"uid":"1312c1b4a6736f12","status":"passed","time":{"start":1735218478692,"stop":1735218478695,"duration":3}},{"uid":"1d50838ee635d9d2","status":"passed","time":{"start":1735146789363,"stop":1735146789375,"duration":12}}]},"tags":["FUNDAMENTALS","OPTIMIZATION","ALGORITHMS","ARRAYS"]},"source":"af253bdb93f08f96.json","parameterValues":[]}