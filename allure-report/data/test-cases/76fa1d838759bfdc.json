{"uid":"76fa1d838759bfdc","name":"Testing 'has_subpattern' (part 2) function","fullName":"kyu_6.string_subpattern_recognition_2.test_has_subpattern.HasSubpatternTestCase#test_has_subpattern_06_123A123a123a","historyId":"2f02ce9d943da9ef6873a7a0b3f98f48","time":{"start":1735735774119,"stop":1735735774119,"duration":0},"description":"Testing 'has_subpattern' function with various test data [with string='123A123a123a', expected=False].\n\n        Verify that 'has_subpattern' function to returns\n        either true/True or false/False if a string can be\n        seen as the repetition of a simpler/shorter subpattern or not.\n\n        1. if a subpattern has been used, it will be repeated\n        at least twice, meaning the subpattern has to be\n        shorter than the original string;\n\n        2. the strings you will be given might or might not\n        be created repeating a given subpattern, then\n        shuffling the result.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_HasSubpatternTestCase","time":{"start":1735735774104,"stop":1735735774104,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing 'has_subpattern' function with various test data [with string='123A123a123a', expected=False].\n\n        Verify that 'has_subpattern' function to returns\n        either true/True or false/False if a string can be\n        seen as the repetition of a simpler/shorter subpattern or not.\n\n        1. if a subpattern has been used, it will be repeated\n        at least twice, meaning the subpattern has to be\n        shorter than the original string;\n\n        2. the strings you will be given might or might not\n        be created repeating a given subpattern, then\n        shuffling the result.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","steps":[{"name":"Pass the string and verify the output","time":{"start":1735735774119,"stop":1735735774119,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"c6fd8c63f5d3084f","name":"stdout","source":"c6fd8c63f5d3084f.txt","type":"text/plain","size":47}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_HasSubpatternTestCase::0","time":{"start":1735735774140,"stop":1735735774140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"REGULAR EXPRESSIONS"},{"name":"tag","value":"DECLARATIVE PROGRAMMING"},{"name":"subSuite","value":"Unit Tests"},{"name":"feature","value":"String"},{"name":"epic","value":"6 kyu"},{"name":"story","value":"String sub-pattern recognition II"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"suite","value":"Advanced Language Features"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ADVANCED LANGUAGE FEATURES"},{"name":"tag","value":"STRINGS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_6.string_subpattern_recognition_2.test_has_subpattern"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/5a4a391ad8e145cdee0000c4","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7579d77dbf65ef4a","status":"passed","time":{"start":1735735405687,"stop":1735735405687,"duration":0}},{"uid":"be4e47fdfb7245fa","status":"passed","time":{"start":1735230834902,"stop":1735230834903,"duration":1}},{"uid":"b2942c7a500a417a","status":"passed","time":{"start":1735219695894,"stop":1735219695894,"duration":0}},{"uid":"a9fb367302538771","status":"passed","time":{"start":1735219151860,"stop":1735219151860,"duration":0}},{"uid":"a8168b5545b36e39","status":"passed","time":{"start":1735218480455,"stop":1735218480456,"duration":1}},{"uid":"9a4b0c7b6a3e3df8","status":"passed","time":{"start":1735146794269,"stop":1735146794269,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"5aaf49ac7462c6d7","status":"passed","time":{"start":1735735405687,"stop":1735735405687,"duration":0}},{"uid":"13629fa62f6e1731","status":"passed","time":{"start":1735230834902,"stop":1735230834903,"duration":1}},{"uid":"6a34f3cd021115fe","status":"passed","time":{"start":1735219695894,"stop":1735219695894,"duration":0}},{"uid":"4301c322bfbc3eb4","status":"passed","time":{"start":1735218480455,"stop":1735218480456,"duration":1}},{"uid":"f55a45b05db4989f","status":"passed","time":{"start":1735146794269,"stop":1735146794269,"duration":0}}]},"tags":["STRINGS","FUNDAMENTALS","ADVANCED LANGUAGE FEATURES","DECLARATIVE PROGRAMMING","REGULAR EXPRESSIONS"]},"source":"76fa1d838759bfdc.json","parameterValues":[]}