{"uid":"c5059b8ea4bd632c","name":"Testing increment_string function","fullName":"kyu_5.string_incrementer.test_increment_string.StringIncrementerTestCase#test_increment_string_0_foo","historyId":"ef75f1e4f915f01a3197f622370b16f7","time":{"start":1735735772443,"stop":1735735772443,"duration":0},"description":"Testing a function named increment_string [with string='foo', expected='foo1'].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>- If the string already ends with a number, the number should be incremented by 1.<br/>- If the string does not end with a number. the number 1 should be appended to the new string.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_StringIncrementerTestCase","time":{"start":1735735772443,"stop":1735735772443,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing a function named increment_string [with string='foo', expected='foo1'].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>- If the string already ends with a number, the number should be incremented by 1.<br/>- If the string does not end with a number. the number 1 should be appended to the new string.</p>","status":"passed","steps":[{"name":"Enter test string: foo and verify the output: foo1","time":{"start":1735735772443,"stop":1735735772443,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"ebbc260c493b7d70","name":"stdout","source":"ebbc260c493b7d70.txt","type":"text/plain","size":51}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_StringIncrementerTestCase::0","time":{"start":1735735772485,"stop":1735735772485,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"REGULAR EXPRESSIONS"},{"name":"tag","value":"DECLARATIVE PROGRAMMING"},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"STRINGS PARSING"},{"name":"story","value":"String incrementer"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ADVANCED LANGUAGE FEATURES"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.string_incrementer.test_increment_string"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/54a91a4883a7de5d7800009c","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"670624385b1a4dee","status":"passed","time":{"start":1735735404001,"stop":1735735404001,"duration":0}},{"uid":"80ed42622a00cc0e","status":"passed","time":{"start":1735230833248,"stop":1735230833248,"duration":0}},{"uid":"64fa57e50713584b","status":"passed","time":{"start":1735219694277,"stop":1735219694279,"duration":2}},{"uid":"111f2441529649a1","status":"passed","time":{"start":1735219150205,"stop":1735219150205,"duration":0}},{"uid":"6b0c321c91a76d65","status":"passed","time":{"start":1735218479046,"stop":1735218479046,"duration":0}},{"uid":"d9efd9fbbe5e7db0","status":"passed","time":{"start":1735146790270,"stop":1735146790272,"duration":2}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"5abcf72080f419f","status":"passed","time":{"start":1735735404001,"stop":1735735404001,"duration":0}},{"uid":"675a9d75013f6450","status":"passed","time":{"start":1735230833248,"stop":1735230833248,"duration":0}},{"uid":"aa49cd6c3a733d00","status":"passed","time":{"start":1735219694277,"stop":1735219694279,"duration":2}},{"uid":"dfb96affade613ec","status":"passed","time":{"start":1735218479046,"stop":1735218479046,"duration":0}},{"uid":"336e3f89f34b0d53","status":"passed","time":{"start":1735146790270,"stop":1735146790272,"duration":2}}]},"tags":["FUNDAMENTALS","STRINGS PARSING","ADVANCED LANGUAGE FEATURES","DECLARATIVE PROGRAMMING","ALGORITHMS","REGULAR EXPRESSIONS"]},"source":"c5059b8ea4bd632c.json","parameterValues":[]}