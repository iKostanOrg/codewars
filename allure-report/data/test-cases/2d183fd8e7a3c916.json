{"uid":"2d183fd8e7a3c916","name":"Testing list_squared function","fullName":"kyu_5.integers_recreation_one.test_list_squared.ListSquaredTestCase#test_flatten_2","historyId":"6e91b0e215ba10b79e80ef4f34ed484a","time":{"start":1735735771972,"stop":1735735771974,"duration":2},"description":"Testing list_squared function [with m=250, n=500, expected=[[287, 84100]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase","time":{"start":1735735771959,"stop":1735735771959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing list_squared function [with m=250, n=500, expected=[[287, 84100]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","steps":[{"name":"Enter test data and verify the output...","time":{"start":1735735771972,"stop":1735735771974,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"5347061b486918c6","name":"stdout","source":"5347061b486918c6.txt","type":"text/plain","size":81}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase::0","time":{"start":1735735772111,"stop":1735735772111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Optimization"},{"name":"story","value":"Integers: Recreation One"},{"name":"tag","value":"OPTIMIZATION"},{"name":"subSuite","value":"Unit Tests"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ARRAYS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.integers_recreation_one.test_list_squared"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/55aa075506463dac6600010d","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d4a381aa1a7c761e","status":"passed","time":{"start":1735735403635,"stop":1735735403640,"duration":5}},{"uid":"73aa15d399f60765","status":"passed","time":{"start":1735230832886,"stop":1735230832889,"duration":3}},{"uid":"d516360ceffab81e","status":"passed","time":{"start":1735219693889,"stop":1735219693891,"duration":2}},{"uid":"1e943c2e5eacaf85","status":"passed","time":{"start":1735219149820,"stop":1735219149821,"duration":1}},{"uid":"d0f6bb912fa4730b","status":"passed","time":{"start":1735218478702,"stop":1735218478704,"duration":2}},{"uid":"68110680eea8c4f","status":"passed","time":{"start":1735146789397,"stop":1735146789407,"duration":10}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"a8dd885df8d039c2","status":"passed","time":{"start":1735735403635,"stop":1735735403640,"duration":5}},{"uid":"68027cfb56673f55","status":"passed","time":{"start":1735230832886,"stop":1735230832889,"duration":3}},{"uid":"1da4bcfc0627ce2a","status":"passed","time":{"start":1735219693889,"stop":1735219693891,"duration":2}},{"uid":"7814880b0583a4bd","status":"passed","time":{"start":1735218478702,"stop":1735218478704,"duration":2}},{"uid":"c0b9911ce8baa3cf","status":"passed","time":{"start":1735146789397,"stop":1735146789407,"duration":10}}]},"tags":["FUNDAMENTALS","OPTIMIZATION","ALGORITHMS","ARRAYS"]},"source":"2d183fd8e7a3c916.json","parameterValues":[]}