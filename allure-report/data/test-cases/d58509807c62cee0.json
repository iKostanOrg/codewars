{"uid":"d58509807c62cee0","name":"Testing the 'find_missing_number' function","fullName":"kyu_6.number_zoo_patrol.test_find_missing_number.FindMissingNumberTestCase#test_find_missing_number_0","historyId":"326b650c786704146aaf307b37f37135","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"description":"Testing 'find_missing_number' function with various test data [with numbers=[2, 3, 4], expected=1].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing 'find_missing_number' function with various test data [with numbers=[2, 3, 4], expected=1].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","steps":[{"name":"Enter a list and verify the expected output: 1 vs actual result: 1","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"dcd4a3831bf083f4","name":"stdout","source":"dcd4a3831bf083f4.txt","type":"text/plain","size":48}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase::0","time":{"start":1735735773917,"stop":1735735773917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"NUMBERS"},{"name":"story","value":"Number Zoo Patrol"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"PERFORMANCE"},{"name":"feature","value":"Math"},{"name":"subSuite","value":"Unit Tests"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"6 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"MATHEMATICS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_6.number_zoo_patrol.test_find_missing_number"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/5276c18121e20900c0000235","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"344f5d0320184dd9","status":"passed","time":{"start":1735735405437,"stop":1735735405437,"duration":0}},{"uid":"7c0fa27fd1ed6180","status":"passed","time":{"start":1735230834673,"stop":1735230834674,"duration":1}},{"uid":"111590422df7b0e3","status":"passed","time":{"start":1735219695656,"stop":1735219695656,"duration":0}},{"uid":"b1f6eea2143ce874","status":"passed","time":{"start":1735219151626,"stop":1735219151627,"duration":1}},{"uid":"9c3faf0db0bafaba","status":"passed","time":{"start":1735218480269,"stop":1735218480270,"duration":1}},{"uid":"c0f65f0e3db4553f","status":"passed","time":{"start":1735146793713,"stop":1735146793715,"duration":2}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"b91b9d0340bd64ba","status":"passed","time":{"start":1735735405437,"stop":1735735405437,"duration":0}},{"uid":"f15bf8cb3a5c30a8","status":"passed","time":{"start":1735230834673,"stop":1735230834674,"duration":1}},{"uid":"35613c8317543fae","status":"passed","time":{"start":1735219695656,"stop":1735219695656,"duration":0}},{"uid":"701afabfd6a00cd2","status":"passed","time":{"start":1735218480269,"stop":1735218480270,"duration":1}},{"uid":"9b041db3c2ef01da","status":"passed","time":{"start":1735146793713,"stop":1735146793715,"duration":2}}]},"tags":["MATHEMATICS","NUMBERS","PERFORMANCE","ALGORITHMS"]},"source":"d58509807c62cee0.json","parameterValues":[]}