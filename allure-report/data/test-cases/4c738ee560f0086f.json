{"uid":"4c738ee560f0086f","name":"Testing the 'find_missing_number' function","fullName":"kyu_6.number_zoo_patrol.test_find_missing_number.FindMissingNumberTestCase#test_find_missing_number_3","historyId":"f934f5f57870c341472556585a681ec8","time":{"start":1735230834685,"stop":1735230834685,"duration":0},"description":"Testing 'find_missing_number' function with various test data [with numbers=[1, 2, 3], expected=4].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":4,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase","time":{"start":1735230834673,"stop":1735230834673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"description":"Testing 'find_missing_number' function with various test data [with numbers=[1, 2, 3], expected=4].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","steps":[{"name":"Enter a list and verify the expected output: 4 vs actual result: 4","time":{"start":1735230834685,"stop":1735230834685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"attachments":[{"uid":"27bfad4b20f921c3","name":"stdout","source":"27bfad4b20f921c3.txt","type":"text/plain","size":48}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":true,"stepsCount":1},"afterStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase::0","time":{"start":1735230834691,"stop":1735230834691,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"severity","value":"normal"},{"name":"suite","value":"Algorithms"},{"name":"epic","value":"6 kyu"},{"name":"tag","value":"MATHEMATICS"},{"name":"feature","value":"Math"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"NUMBERS"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"PERFORMANCE"},{"name":"story","value":"Number Zoo Patrol"},{"name":"subSuite","value":"Unit Tests"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"5532-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_6.number_zoo_patrol.test_find_missing_number"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/5276c18121e20900c0000235","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b3b0e1bb93c60f2","status":"passed","time":{"start":1735219695667,"stop":1735219695668,"duration":1}},{"uid":"e6c6d5c51c672946","status":"passed","time":{"start":1735219151638,"stop":1735219151639,"duration":1}},{"uid":"7bb636b433371465","status":"passed","time":{"start":1735218480278,"stop":1735218480279,"duration":1}},{"uid":"18a4c6cae6ffe57b","status":"passed","time":{"start":1735146793744,"stop":1735146793744,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"e44cc9a87d9eb1d8","status":"passed","time":{"start":1735219695667,"stop":1735219695668,"duration":1}},{"uid":"4a8639463b9c4187","status":"passed","time":{"start":1735218480278,"stop":1735218480279,"duration":1}},{"uid":"749f7a2b82fcf2f3","status":"passed","time":{"start":1735146793744,"stop":1735146793744,"duration":0}}]},"tags":["MATHEMATICS","NUMBERS","PERFORMANCE","ALGORITHMS"]},"source":"4c738ee560f0086f.json","parameterValues":[]}