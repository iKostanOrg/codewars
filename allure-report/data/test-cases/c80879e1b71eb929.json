{"uid":"c80879e1b71eb929","name":"String with no duplicate chars","fullName":"kyu_6.format_string_of_names.test_namelist.NamelistTestCase#test_namelist_3","historyId":"5c03ce7845eede2e2793c56217629685","time":{"start":1735735773768,"stop":1735735773768,"duration":0},"description":"Test namelist [with names=[{'name': 'Bart'}], expected='Bart', message='Wrong output for a single name'].\n\n        Given:\n        an array containing hashes of names\n\n        Return:\n        a string formatted as a list of names separated by commas\n        except for the last two names, which should be separated\n        by an ampersand.\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Should a string formatted as a list of names separated by commas except for the last two names, which should be separated by an ampersand.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_NamelistTestCase","time":{"start":1735735773750,"stop":1735735773750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Test namelist [with names=[{'name': 'Bart'}], expected='Bart', message='Wrong output for a single name'].\n\n        Given:\n        an array containing hashes of names\n\n        Return:\n        a string formatted as a list of names separated by commas\n        except for the last two names, which should be separated\n        by an ampersand.\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Should a string formatted as a list of names separated by commas except for the last two names, which should be separated by an ampersand.</p>","status":"passed","steps":[{"name":"Process input consist of names: [{'name': 'Bart'}] and verify the output: Bart.","time":{"start":1735735773768,"stop":1735735773768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"ba4034bb64952b09","name":"stdout","source":"ba4034bb64952b09.txt","type":"text/plain","size":106}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_NamelistTestCase::0","time":{"start":1735735773774,"stop":1735735773774,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"story","value":"Format a string of names like 'Bart, Lisa & Maggie'."},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"FORMATTING"},{"name":"epic","value":"6 kyu"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"STRINGS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_6.format_string_of_names.test_namelist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/53368a47e38700bd8300030d","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c5bc63de25a6ae3","status":"passed","time":{"start":1735735405288,"stop":1735735405288,"duration":0}},{"uid":"79bba045c16756cc","status":"passed","time":{"start":1735230834548,"stop":1735230834549,"duration":1}},{"uid":"ede9c56fda29ed60","status":"passed","time":{"start":1735219695540,"stop":1735219695541,"duration":1}},{"uid":"d71b29f92e12ada1","status":"passed","time":{"start":1735219151492,"stop":1735219151492,"duration":0}},{"uid":"6145c44f61d40d9a","status":"passed","time":{"start":1735218480167,"stop":1735218480167,"duration":0}},{"uid":"825d5abe23e2717a","status":"passed","time":{"start":1735146793400,"stop":1735146793400,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"726fecc94d31e5ef","status":"passed","time":{"start":1735735405288,"stop":1735735405288,"duration":0}},{"uid":"1e2a4d4678cf8d92","status":"passed","time":{"start":1735230834548,"stop":1735230834549,"duration":1}},{"uid":"579415aa949e130e","status":"passed","time":{"start":1735219695540,"stop":1735219695541,"duration":1}},{"uid":"a2b177fc4b298f3f","status":"passed","time":{"start":1735218480167,"stop":1735218480167,"duration":0}},{"uid":"39b2b42651e5258b","status":"passed","time":{"start":1735146793400,"stop":1735146793400,"duration":0}}]},"tags":["FORMATTING","STRINGS","FUNDAMENTALS","ALGORITHMS"]},"source":"c80879e1b71eb929.json","parameterValues":[]}