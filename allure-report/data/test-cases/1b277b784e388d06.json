{"uid":"1b277b784e388d06","name":"Testing first_non_repeating_letter function","fullName":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter.FirstNonRepeatingLetterTestCase#test_first_non_repeating_letter_5_aa","historyId":"26095bde69ecf9c968a344367bbd80b3","time":{"start":1735735771899,"stop":1735735771899,"duration":0},"description":"Testing a function named first_non_repeating_letter [with string='aa', expected=''].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase","time":{"start":1735735771857,"stop":1735735771857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing a function named first_non_repeating_letter [with string='aa', expected=''].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","steps":[{"name":"Enter test string: aa and verify the output: ","time":{"start":1735735771899,"stop":1735735771899,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"fb58e9ccb09ab526","name":"stdout","source":"fb58e9ccb09ab526.txt","type":"text/plain","size":32}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase::0","time":{"start":1735735771921,"stop":1735735771921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"STRINGS"},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"story","value":"First non-repeating character"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"SEARCH"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/52bc74d4ac05d0945d00054e","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c0d023d4705ea9f7","status":"passed","time":{"start":1735735403562,"stop":1735735403562,"duration":0}},{"uid":"a1c53cee42760c8b","status":"passed","time":{"start":1735230832828,"stop":1735230832829,"duration":1}},{"uid":"fa696464b4546f7f","status":"passed","time":{"start":1735219693828,"stop":1735219693828,"duration":0}},{"uid":"43e313e5d7ccb8a8","status":"passed","time":{"start":1735219149756,"stop":1735219149757,"duration":1}},{"uid":"9b62a8f1984590c2","status":"passed","time":{"start":1735218478618,"stop":1735218478619,"duration":1}},{"uid":"612cafc190eabf81","status":"passed","time":{"start":1735146789235,"stop":1735146789235,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"cf7e987f92238579","status":"passed","time":{"start":1735735403562,"stop":1735735403562,"duration":0}},{"uid":"ac2cfb01901d5fa4","status":"passed","time":{"start":1735230832828,"stop":1735230832829,"duration":1}},{"uid":"d1deb82cb9dcce87","status":"passed","time":{"start":1735219693828,"stop":1735219693828,"duration":0}},{"uid":"6981ba44b035ed9e","status":"passed","time":{"start":1735218478618,"stop":1735218478619,"duration":1}},{"uid":"d221b030e309ff53","status":"passed","time":{"start":1735146789235,"stop":1735146789235,"duration":0}}]},"tags":["STRINGS","SEARCH","ALGORITHMS"]},"source":"1b277b784e388d06.json","parameterValues":[]}