{"uid":"34008ba5247ddd01","name":"Testing increment_string function","fullName":"kyu_5.string_incrementer.test_increment_string.StringIncrementerTestCase#test_increment_string_2_foobar1","historyId":"6b609e5572450e0e6f492a32749b2523","time":{"start":1735735772453,"stop":1735735772453,"duration":0},"description":"Testing a function named increment_string [with string='foobar1', expected='foobar2'].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>- If the string already ends with a number, the number should be incremented by 1.<br/>- If the string does not end with a number. the number 1 should be appended to the new string.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_StringIncrementerTestCase","time":{"start":1735735772443,"stop":1735735772443,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing a function named increment_string [with string='foobar1', expected='foobar2'].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>- If the string already ends with a number, the number should be incremented by 1.<br/>- If the string does not end with a number. the number 1 should be appended to the new string.</p>","status":"passed","steps":[{"name":"Enter test string: foobar1 and verify the output: foobar2","time":{"start":1735735772453,"stop":1735735772453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"ec89325e25c3e951","name":"stdout","source":"ec89325e25c3e951.txt","type":"text/plain","size":61}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_StringIncrementerTestCase::0","time":{"start":1735735772485,"stop":1735735772485,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"REGULAR EXPRESSIONS"},{"name":"tag","value":"DECLARATIVE PROGRAMMING"},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"STRINGS PARSING"},{"name":"story","value":"String incrementer"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ADVANCED LANGUAGE FEATURES"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.string_incrementer.test_increment_string"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/54a91a4883a7de5d7800009c","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5053785ac85931d7","status":"passed","time":{"start":1735735404017,"stop":1735735404017,"duration":0}},{"uid":"98b3a9738b2c8fb5","status":"passed","time":{"start":1735230833256,"stop":1735230833257,"duration":1}},{"uid":"c971e44e4eda3bd0","status":"passed","time":{"start":1735219694289,"stop":1735219694290,"duration":1}},{"uid":"13801844846f546b","status":"passed","time":{"start":1735219150213,"stop":1735219150213,"duration":0}},{"uid":"d9af5ef0ca5c111","status":"passed","time":{"start":1735218479051,"stop":1735218479052,"duration":1}},{"uid":"5aedadc036d84454","status":"passed","time":{"start":1735146790290,"stop":1735146790292,"duration":2}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"8773e1e4d0a62595","status":"passed","time":{"start":1735735404017,"stop":1735735404017,"duration":0}},{"uid":"a92d9ed7e34ce1c4","status":"passed","time":{"start":1735230833256,"stop":1735230833257,"duration":1}},{"uid":"dd2fdb260e3ac7eb","status":"passed","time":{"start":1735219694289,"stop":1735219694290,"duration":1}},{"uid":"78080bfe29f7145","status":"passed","time":{"start":1735218479051,"stop":1735218479052,"duration":1}},{"uid":"41a3e3dc48dc5b65","status":"passed","time":{"start":1735146790290,"stop":1735146790292,"duration":2}}]},"tags":["FUNDAMENTALS","STRINGS PARSING","ADVANCED LANGUAGE FEATURES","DECLARATIVE PROGRAMMING","ALGORITHMS","REGULAR EXPRESSIONS"]},"source":"34008ba5247ddd01.json","parameterValues":[]}