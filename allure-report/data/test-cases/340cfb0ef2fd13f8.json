{"uid":"340cfb0ef2fd13f8","name":"Testing first_non_repeating_letter function","fullName":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter.FirstNonRepeatingLetterTestCase#test_first_non_repeating_letter_6__","historyId":"92937dc0438cd4a4732d13cce605aefe","time":{"start":1735735771903,"stop":1735735771905,"duration":2},"description":"Testing a function named first_non_repeating_letter [with string='~><#~><', expected='#'].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase","time":{"start":1735735771857,"stop":1735735771857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing a function named first_non_repeating_letter [with string='~><#~><', expected='#'].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","steps":[{"name":"Enter test string: ~><#~>< and verify the output: #","time":{"start":1735735771903,"stop":1735735771905,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"beca82fb25ce3ef3","name":"stdout","source":"beca82fb25ce3ef3.txt","type":"text/plain","size":38}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase::0","time":{"start":1735735771921,"stop":1735735771921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"STRINGS"},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"story","value":"First non-repeating character"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"SEARCH"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/52bc74d4ac05d0945d00054e","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"746a19f08315fa9b","status":"passed","time":{"start":1735735403571,"stop":1735735403574,"duration":3}},{"uid":"866f35950c06ef82","status":"passed","time":{"start":1735230832832,"stop":1735230832833,"duration":1}},{"uid":"9f285b0efbaf5449","status":"passed","time":{"start":1735219693832,"stop":1735219693832,"duration":0}},{"uid":"c2806f52998ecc0","status":"passed","time":{"start":1735219149760,"stop":1735219149760,"duration":0}},{"uid":"7d33c07046d0bfe0","status":"passed","time":{"start":1735218478629,"stop":1735218478629,"duration":0}},{"uid":"f6b4ea32d9986c9a","status":"passed","time":{"start":1735146789249,"stop":1735146789249,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"f5418769ffbb36b","status":"passed","time":{"start":1735735403571,"stop":1735735403574,"duration":3}},{"uid":"a1b367fb1f14a9b2","status":"passed","time":{"start":1735230832832,"stop":1735230832833,"duration":1}},{"uid":"e97fe12319bc8b93","status":"passed","time":{"start":1735219693832,"stop":1735219693832,"duration":0}},{"uid":"af33221a5e163abc","status":"passed","time":{"start":1735218478629,"stop":1735218478629,"duration":0}},{"uid":"2504acdf45ccb7a1","status":"passed","time":{"start":1735146789249,"stop":1735146789249,"duration":0}}]},"tags":["STRINGS","SEARCH","ALGORITHMS"]},"source":"340cfb0ef2fd13f8.json","parameterValues":[]}