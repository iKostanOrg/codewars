{"uid":"fa61c114fb8404ea","name":"String with no duplicate chars","fullName":"kyu_6.format_string_of_names.test_namelist.NamelistTestCase#test_namelist_2","historyId":"83ff2d73f6c6e3d6ae8881cff9746c3d","time":{"start":1735230834543,"stop":1735230834544,"duration":1},"description":"Test namelist [with names=[{'name': 'Bart'}, {'name': 'Lisa'}], expected='Bart & Lisa', message='Must work with two names'].\n\n        Given:\n        an array containing hashes of names\n\n        Return:\n        a string formatted as a list of names separated by commas\n        except for the last two names, which should be separated\n        by an ampersand.\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Should a string formatted as a list of names separated by commas except for the last two names, which should be separated by an ampersand.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":4,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_NamelistTestCase","time":{"start":1735230834533,"stop":1735230834533,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"description":"Test namelist [with names=[{'name': 'Bart'}, {'name': 'Lisa'}], expected='Bart & Lisa', message='Must work with two names'].\n\n        Given:\n        an array containing hashes of names\n\n        Return:\n        a string formatted as a list of names separated by commas\n        except for the last two names, which should be separated\n        by an ampersand.\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Should a string formatted as a list of names separated by commas except for the last two names, which should be separated by an ampersand.</p>","status":"passed","steps":[{"name":"Process input consist of names: [{'name': 'Bart'}, {'name': 'Lisa'}] and verify the output: Bart & Lisa.","time":{"start":1735230834544,"stop":1735230834544,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"attachments":[{"uid":"8f69619f108cab0a","name":"stdout","source":"8f69619f108cab0a.txt","type":"text/plain","size":132}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":true,"stepsCount":1},"afterStages":[{"name":"_unittest_setUpClass_fixture_NamelistTestCase::0","time":{"start":1735230834553,"stop":1735230834553,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"severity","value":"normal"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"STRINGS"},{"name":"epic","value":"6 kyu"},{"name":"tag","value":"FORMATTING"},{"name":"subSuite","value":"Unit Tests"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"story","value":"Format a string of names like 'Bart, Lisa & Maggie'."},{"name":"feature","value":"String"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"5532-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_6.format_string_of_names.test_namelist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/53368a47e38700bd8300030d","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f0663479c7318fa6","status":"passed","time":{"start":1735219695535,"stop":1735219695536,"duration":1}},{"uid":"fbad6a8e684e23e6","status":"passed","time":{"start":1735219151487,"stop":1735219151488,"duration":1}},{"uid":"c371de1adbbfc2bc","status":"passed","time":{"start":1735218480164,"stop":1735218480164,"duration":0}},{"uid":"24127d59a9743503","status":"passed","time":{"start":1735146793400,"stop":1735146793400,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"417718fe2b9d234f","status":"passed","time":{"start":1735219695535,"stop":1735219695536,"duration":1}},{"uid":"4920fd5a0f5e2419","status":"passed","time":{"start":1735218480164,"stop":1735218480164,"duration":0}},{"uid":"5fbbdfc8252061f","status":"passed","time":{"start":1735146793400,"stop":1735146793400,"duration":0}}]},"tags":["STRINGS","FORMATTING","FUNDAMENTALS","ALGORITHMS"]},"source":"fa61c114fb8404ea.json","parameterValues":[]}