{"uid":"c80467ed81d90ec4","name":"Testing first_non_repeating_letter function","fullName":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter.FirstNonRepeatingLetterTestCase#test_first_non_repeating_letter_7_hello_world_eh_","historyId":"005d3613cf6ead7b07df448866c94917","time":{"start":1735735771909,"stop":1735735771911,"duration":2},"description":"Testing a function named first_non_repeating_letter [with string='hello world, eh?', expected='w'].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase","time":{"start":1735735771857,"stop":1735735771857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing a function named first_non_repeating_letter [with string='hello world, eh?', expected='w'].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","steps":[{"name":"Enter test string: hello world, eh? and verify the output: w","time":{"start":1735735771909,"stop":1735735771909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"6cc0ec4b450f7641","name":"stdout","source":"6cc0ec4b450f7641.txt","type":"text/plain","size":47}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase::0","time":{"start":1735735771921,"stop":1735735771921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"STRINGS"},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"story","value":"First non-repeating character"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"SEARCH"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/52bc74d4ac05d0945d00054e","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"56298cbf477d5416","status":"passed","time":{"start":1735735403574,"stop":1735735403578,"duration":4}},{"uid":"3d80ba6d057a8f8e","status":"passed","time":{"start":1735230832837,"stop":1735230832837,"duration":0}},{"uid":"d9d489a487bf0fe8","status":"passed","time":{"start":1735219693835,"stop":1735219693836,"duration":1}},{"uid":"d6821d31b1bdcc16","status":"passed","time":{"start":1735219149764,"stop":1735219149765,"duration":1}},{"uid":"70c20ac19d898f0a","status":"passed","time":{"start":1735218478635,"stop":1735218478636,"duration":1}},{"uid":"429b8fdc8fcea405","status":"passed","time":{"start":1735146789249,"stop":1735146789249,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"8730251e41c7bbab","status":"passed","time":{"start":1735735403574,"stop":1735735403578,"duration":4}},{"uid":"1af74ed63e8d11e1","status":"passed","time":{"start":1735230832837,"stop":1735230832837,"duration":0}},{"uid":"6728718566347db2","status":"passed","time":{"start":1735219693835,"stop":1735219693836,"duration":1}},{"uid":"be3c7a1f8fdc866f","status":"passed","time":{"start":1735218478635,"stop":1735218478636,"duration":1}},{"uid":"851329d326ad8d72","status":"passed","time":{"start":1735146789249,"stop":1735146789249,"duration":0}}]},"tags":["STRINGS","SEARCH","ALGORITHMS"]},"source":"c80467ed81d90ec4.json","parameterValues":[]}