{"uid":"ca39b6d34951d956","name":"Testing list_squared function","fullName":"kyu_5.integers_recreation_one.test_list_squared.ListSquaredTestCase#test_flatten_5","historyId":"d99c030b43a8f6cf05278fe011e94c7a","time":{"start":1735735772074,"stop":1735735772111,"duration":37},"description":"Testing list_squared function [with m=257, n=4195, expected=[[287, 84100], [728, 722500], [1...1673, 2856100], [1880, 4884100]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase","time":{"start":1735735771959,"stop":1735735771959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing list_squared function [with m=257, n=4195, expected=[[287, 84100], [728, 722500], [1...1673, 2856100], [1880, 4884100]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","steps":[{"name":"Enter test data and verify the output...","time":{"start":1735735772074,"stop":1735735772111,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"6b23eb11c37e913e","name":"stdout","source":"6b23eb11c37e913e.txt","type":"text/plain","size":214}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase::0","time":{"start":1735735772111,"stop":1735735772111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Optimization"},{"name":"story","value":"Integers: Recreation One"},{"name":"tag","value":"OPTIMIZATION"},{"name":"subSuite","value":"Unit Tests"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ARRAYS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.integers_recreation_one.test_list_squared"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/55aa075506463dac6600010d","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d41dd7315da08e31","status":"passed","time":{"start":1735735403705,"stop":1735735403737,"duration":32}},{"uid":"a1b575a628a5001c","status":"passed","time":{"start":1735230832963,"stop":1735230832988,"duration":25}},{"uid":"9d91320649ec77cc","status":"passed","time":{"start":1735219693965,"stop":1735219693995,"duration":30}},{"uid":"d6ad31c699e942ac","status":"passed","time":{"start":1735219149902,"stop":1735219149929,"duration":27}},{"uid":"d3ece2ba5b6be8","status":"passed","time":{"start":1735218478794,"stop":1735218478822,"duration":28}},{"uid":"7327d03b62941e48","status":"passed","time":{"start":1735146789631,"stop":1735146789685,"duration":54}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"9db0544144b83ad1","status":"passed","time":{"start":1735735403705,"stop":1735735403737,"duration":32}},{"uid":"926a9bc7348646c0","status":"passed","time":{"start":1735230832963,"stop":1735230832988,"duration":25}},{"uid":"89e73ef87dbf110d","status":"passed","time":{"start":1735219693965,"stop":1735219693995,"duration":30}},{"uid":"aff061921aa2f0a1","status":"passed","time":{"start":1735218478794,"stop":1735218478822,"duration":28}},{"uid":"8b4ff47a0ff9f7ed","status":"passed","time":{"start":1735146789631,"stop":1735146789685,"duration":54}}]},"tags":["FUNDAMENTALS","OPTIMIZATION","ALGORITHMS","ARRAYS"]},"source":"ca39b6d34951d956.json","parameterValues":[]}