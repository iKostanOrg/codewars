{"uid":"2359331ab937339d","name":"Testing list_squared function","fullName":"kyu_5.integers_recreation_one.test_list_squared.ListSquaredTestCase#test_flatten_1","historyId":"794c39b0874d9a91139466979f511e10","time":{"start":1735735771966,"stop":1735735771968,"duration":2},"description":"Testing list_squared function [with m=42, n=250, expected=[[42, 2500], [246, 84100]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase","time":{"start":1735735771959,"stop":1735735771959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing list_squared function [with m=42, n=250, expected=[[42, 2500], [246, 84100]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","steps":[{"name":"Enter test data and verify the output...","time":{"start":1735735771966,"stop":1735735771968,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"6fb162c2648ab62b","name":"stdout","source":"6fb162c2648ab62b.txt","type":"text/plain","size":104}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase::0","time":{"start":1735735772111,"stop":1735735772111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Optimization"},{"name":"story","value":"Integers: Recreation One"},{"name":"tag","value":"OPTIMIZATION"},{"name":"subSuite","value":"Unit Tests"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ARRAYS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.integers_recreation_one.test_list_squared"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/55aa075506463dac6600010d","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7383a7e8c0fca393","status":"passed","time":{"start":1735735403632,"stop":1735735403635,"duration":3}},{"uid":"d08f18cac0852adb","status":"passed","time":{"start":1735230832882,"stop":1735230832883,"duration":1}},{"uid":"5114c1b0e172f115","status":"passed","time":{"start":1735219693885,"stop":1735219693886,"duration":1}},{"uid":"a5e917ad7cb5abba","status":"passed","time":{"start":1735219149815,"stop":1735219149817,"duration":2}},{"uid":"acf3361d8257fbc","status":"passed","time":{"start":1735218478698,"stop":1735218478699,"duration":1}},{"uid":"2894449ab89aa5b8","status":"passed","time":{"start":1735146789375,"stop":1735146789375,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"81e72bc406708c2d","status":"passed","time":{"start":1735735403632,"stop":1735735403635,"duration":3}},{"uid":"bb5d760d24660a5d","status":"passed","time":{"start":1735230832882,"stop":1735230832883,"duration":1}},{"uid":"2e08dcd4cd350b2b","status":"passed","time":{"start":1735219693885,"stop":1735219693886,"duration":1}},{"uid":"81d358395f5f3106","status":"passed","time":{"start":1735218478698,"stop":1735218478699,"duration":1}},{"uid":"d5fefe63837854aa","status":"passed","time":{"start":1735146789375,"stop":1735146789375,"duration":0}}]},"tags":["FUNDAMENTALS","OPTIMIZATION","ALGORITHMS","ARRAYS"]},"source":"2359331ab937339d.json","parameterValues":[]}