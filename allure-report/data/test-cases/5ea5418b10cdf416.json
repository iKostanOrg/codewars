{"uid":"5ea5418b10cdf416","name":"Testing dir_reduc function","fullName":"kyu_5.directions_reduction.test_directions_reduction.DirectionsReductionTestCase#test_directions_reduction","historyId":"b49a06236d1af1a464e84083e52f6b22","time":{"start":1732428194207,"stop":1732428194207,"duration":0},"description":"\n        Test a function dir_reduc which will take an array of\n        strings and returns an array of strings with the needless\n        directions removed (W<->E or S<->N side by side).\n\n        The Haskell version takes a list of directions with\n        data Direction = North | East | West | South.\n\n        The Clojure version returns nil when the path is\n        reduced to nothing.\n\n        The Rust version takes a slice of enum Direction\n        {NORTH, SOUTH, EAST, WEST}.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p> Test a function dirReduc which will take an array of strings and returns an array of strings with the needless directions removed (W<->E or S<->N side by side).</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_DirectionsReductionTestCase","time":{"start":1732428194205,"stop":1732428194205,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"\n        Test a function dir_reduc which will take an array of\n        strings and returns an array of strings with the needless\n        directions removed (W<->E or S<->N side by side).\n\n        The Haskell version takes a list of directions with\n        data Direction = North | East | West | South.\n\n        The Clojure version returns nil when the path is\n        reduced to nothing.\n\n        The Rust version takes a slice of enum Direction\n        {NORTH, SOUTH, EAST, WEST}.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p> Test a function dirReduc which will take an array of strings and returns an array of strings with the needless directions removed (W<->E or S<->N side by side).</p>","status":"passed","steps":[{"name":"Enter test data (['NORTH', 'SOUTH', 'SOUTH', 'EAST', 'WEST', 'NORTH', 'WEST']) and verify the output (['WEST']) vs expected (['WEST'])","time":{"start":1732428194207,"stop":1732428194207,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Enter test data (['NORTH', 'WEST', 'SOUTH', 'EAST']) and verify the output (['NORTH', 'WEST', 'SOUTH', 'EAST']) vs expected (['NORTH', 'WEST', 'SOUTH', 'EAST'])","time":{"start":1732428194207,"stop":1732428194207,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Enter test data (['NORTH', 'EAST', 'NORTH', 'EAST', 'WEST', 'WEST', 'EAST', 'EAST', 'WEST', 'SOUTH']) and verify the output (['NORTH', 'EAST']) vs expected (['NORTH', 'EAST'])","time":{"start":1732428194207,"stop":1732428194207,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Enter test data (['EAST', 'NORTH', 'SOUTH', 'NORTH', 'SOUTH', 'SOUTH', 'SOUTH', 'SOUTH', 'NORTH', 'SOUTH', 'SOUTH', 'EAST', 'SOUTH', 'SOUTH', 'NORTH', 'NORTH', 'SOUTH', 'WEST', 'NORTH', 'EAST', 'WEST', 'WEST', 'WEST', 'EAST', 'SOUTH', 'SOUTH']) and verify the output (['EAST', 'SOUTH', 'SOUTH', 'SOUTH', 'SOUTH', 'EAST', 'SOUTH', 'WEST', 'NORTH', 'WEST', 'SOUTH', 'SOUTH']) vs expected (['EAST', 'SOUTH', 'SOUTH', 'SOUTH', 'SOUTH', 'EAST', 'SOUTH', 'WEST', 'NORTH', 'WEST', 'SOUTH', 'SOUTH'])","time":{"start":1732428194207,"stop":1732428194207,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Enter test data (['WEST', 'NORTH', 'EAST', 'EAST', 'EAST', 'EAST', 'WEST', 'WEST', 'WEST', 'WEST', 'NORTH', 'NORTH', 'SOUTH', 'EAST']) and verify the output (['WEST', 'NORTH', 'NORTH', 'EAST']) vs expected (['WEST', 'NORTH', 'NORTH', 'EAST'])","time":{"start":1732428194207,"stop":1732428194207,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":5,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},"afterStages":[{"name":"_unittest_setUpClass_fixture_DirectionsReductionTestCase::0","time":{"start":1732428194209,"stop":1732428194209,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"severity","value":"normal"},{"name":"subSuite","value":"Unit Tests"},{"name":"epic","value":"5 kyu"},{"name":"story","value":"Directions Reduction"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"suite","value":"Algorithms"},{"name":"feature","value":"Lists"},{"name":"host","value":"DESKTOP-I2O0REL"},{"name":"thread","value":"12720-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.directions_reduction.test_directions_reduction"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/550f22f4d758534c1100025a","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"15dbab6d625f40d3","status":"passed","time":{"start":1724735127485,"stop":1724735127485,"duration":0}},{"uid":"8cdb3386cf094e1f","status":"passed","time":{"start":1724733472593,"stop":1724733472593,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"5e6aa533c6c0fafa","status":"passed","time":{"start":1724735127485,"stop":1724735127485,"duration":0}},{"uid":"d65c16a1b47d468e","status":"passed","time":{"start":1724735127485,"stop":1724735127485,"duration":0}}]},"tags":["FUNDAMENTALS"]},"source":"5ea5418b10cdf416.json","parameterValues":[]}