{"uid":"4f59c144e8b96276","name":"Testing first_non_repeating_letter function","fullName":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter.FirstNonRepeatingLetterTestCase#test_first_non_repeating_letter_9_Go_hang_a_salami_I_m_a_lasagna_hog_","historyId":"1f6b84bd75bb8b4e4a2e1f11ed76448b","time":{"start":1735735771915,"stop":1735735771921,"duration":6},"description":"Testing a function named first_non_repeating_letter [with string=\"Go hang a salami, I'm a lasagna hog!\", expected=','].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase","time":{"start":1735735771857,"stop":1735735771857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing a function named first_non_repeating_letter [with string=\"Go hang a salami, I'm a lasagna hog!\", expected=','].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","steps":[{"name":"Enter test string: Go hang a salami, I'm a lasagna hog! and verify the output: ,","time":{"start":1735735771921,"stop":1735735771921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"9ab112376fc4ad98","name":"stdout","source":"9ab112376fc4ad98.txt","type":"text/plain","size":67}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase::0","time":{"start":1735735771921,"stop":1735735771921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"STRINGS"},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"story","value":"First non-repeating character"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"SEARCH"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/52bc74d4ac05d0945d00054e","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c133b73f4604eea6","status":"passed","time":{"start":1735735403578,"stop":1735735403578,"duration":0}},{"uid":"a037e1845331377a","status":"passed","time":{"start":1735230832844,"stop":1735230832845,"duration":1}},{"uid":"b0662e1d57f557cc","status":"passed","time":{"start":1735219693843,"stop":1735219693844,"duration":1}},{"uid":"bc22a429eb8afbc2","status":"passed","time":{"start":1735219149773,"stop":1735219149774,"duration":1}},{"uid":"ded146d086fb667a","status":"passed","time":{"start":1735218478650,"stop":1735218478651,"duration":1}},{"uid":"6a19f6ff22858957","status":"passed","time":{"start":1735146789270,"stop":1735146789270,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"f7c732d9e1328a83","status":"passed","time":{"start":1735735403578,"stop":1735735403578,"duration":0}},{"uid":"1e3a16ba8157d20a","status":"passed","time":{"start":1735230832844,"stop":1735230832845,"duration":1}},{"uid":"6b707e1a5a512abd","status":"passed","time":{"start":1735219693843,"stop":1735219693844,"duration":1}},{"uid":"740d53600878f4b6","status":"passed","time":{"start":1735218478650,"stop":1735218478651,"duration":1}},{"uid":"683208fe1f836d06","status":"passed","time":{"start":1735146789270,"stop":1735146789270,"duration":0}}]},"tags":["STRINGS","SEARCH","ALGORITHMS"]},"source":"4f59c144e8b96276.json","parameterValues":[]}