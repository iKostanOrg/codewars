{"uid":"afcd3ecf168f8938","name":"Testing advice function","fullName":"kyu_5.find_the_safest_places_in_town.test_advice.FirstAdviceTestCase#test_first_non_repeating_letter","historyId":"dc079813fc553d210a3def6568230a25","time":{"start":1735219693749,"stop":1735219693756,"duration":7},"description":"\n        Testing a function named advice(agents, n).\n\n        agents is an array of agent coordinates.\n        n defines the size of the city that Bassi needs to hide in,\n        in other words the side length of the square grid.\n        The function should return a list of coordinates that are the furthest\n        away (by Manhattan distance) from all agents.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>The function should return a list of coordinates that are the furthest away (by Manhattan distance) from all agents.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FirstAdviceTestCase","time":{"start":1735219693721,"stop":1735219693721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"\n        Testing a function named advice(agents, n).\n\n        agents is an array of agent coordinates.\n        n defines the size of the city that Bassi needs to hide in,\n        in other words the side length of the square grid.\n        The function should return a list of coordinates that are the furthest\n        away (by Manhattan distance) from all agents.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>The function should return a list of coordinates that are the furthest away (by Manhattan distance) from all agents.</p>","status":"passed","steps":[{"name":"Enter test string and verify the output","time":{"start":1735219693749,"stop":1735219693756,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[{"uid":"ba19331fc2c827fa","name":"stdout","source":"ba19331fc2c827fa.txt","type":"text/plain","size":32342}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":1,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_FirstAdviceTestCase::0","time":{"start":1735219693757,"stop":1735219693757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"story","value":"Find the safest places in town"},{"name":"tag","value":"ALGORITHMS"},{"name":"subSuite","value":"Unit Tests"},{"name":"feature","value":"Lists"},{"name":"parentSuite","value":"Novice"},{"name":"suite","value":"Algorithms"},{"name":"epic","value":"5 kyu"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"5232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.find_the_safest_places_in_town.test_advice"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/5dd82b7cd3d6c100109cb4ed","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f8dcc2c6d3561fa2","status":"passed","time":{"start":1735219149673,"stop":1735219149683,"duration":10}},{"uid":"bc00566cfce61c7b","status":"passed","time":{"start":1735218478496,"stop":1735218478506,"duration":10}},{"uid":"c045146e685e720a","status":"passed","time":{"start":1735146789011,"stop":1735146789025,"duration":14}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"62fb8b09a8d46915","status":"passed","time":{"start":1735218478496,"stop":1735218478506,"duration":10}},{"uid":"867ac0f8291c49c7","status":"passed","time":{"start":1735146789011,"stop":1735146789025,"duration":14}},{"uid":"506e0ee504d23a05","status":"passed","time":{"start":1733030098958,"stop":1733030098989,"duration":31}},{"uid":"b684b0c7250ecf6d","status":"passed","time":{"start":1732764218894,"stop":1732764218908,"duration":14}},{"uid":"f727d28e098b30b7","status":"passed","time":{"start":1732428194244,"stop":1732428194248,"duration":4}},{"uid":"9cb8749ab5d5d5c7","status":"passed","time":{"start":1724735127531,"stop":1724735127656,"duration":125}},{"uid":"2ed8dfd7ca5a3d13","status":"passed","time":{"start":1724735127531,"stop":1724735127656,"duration":125}}]},"tags":["ALGORITHMS"]},"source":"afcd3ecf168f8938.json","parameterValues":[]}