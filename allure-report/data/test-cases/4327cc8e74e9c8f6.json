{"uid":"4327cc8e74e9c8f6","name":"Testing the 'find_missing_number' function","fullName":"kyu_6.number_zoo_patrol.test_find_missing_number.FindMissingNumberTestCase#test_find_missing_number_1","historyId":"d8a69753dc4e72a1764d5bc412eb3824","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"description":"Testing 'find_missing_number' function with various test data [with numbers=[1, 3, 4], expected=2].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing 'find_missing_number' function with various test data [with numbers=[1, 3, 4], expected=2].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","steps":[{"name":"Enter a list and verify the expected output: 2 vs actual result: 2","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"9d260c493ab7f5ec","name":"stdout","source":"9d260c493ab7f5ec.txt","type":"text/plain","size":48}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase::0","time":{"start":1735735773917,"stop":1735735773917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"NUMBERS"},{"name":"story","value":"Number Zoo Patrol"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"PERFORMANCE"},{"name":"feature","value":"Math"},{"name":"subSuite","value":"Unit Tests"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"6 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"MATHEMATICS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_6.number_zoo_patrol.test_find_missing_number"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/5276c18121e20900c0000235","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3c6150a0fcd441aa","status":"passed","time":{"start":1735735405437,"stop":1735735405437,"duration":0}},{"uid":"adaa362b047f8428","status":"passed","time":{"start":1735230834677,"stop":1735230834677,"duration":0}},{"uid":"e3140d2a7ea86790","status":"passed","time":{"start":1735219695659,"stop":1735219695660,"duration":1}},{"uid":"a278494e947524fe","status":"passed","time":{"start":1735219151631,"stop":1735219151631,"duration":0}},{"uid":"a2e413ae01ddef7f","status":"passed","time":{"start":1735218480273,"stop":1735218480273,"duration":0}},{"uid":"186220d7b83da3ee","status":"passed","time":{"start":1735146793724,"stop":1735146793724,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"ae72c9e957051d3c","status":"passed","time":{"start":1735735405437,"stop":1735735405437,"duration":0}},{"uid":"f99e1dbdca0120d7","status":"passed","time":{"start":1735230834677,"stop":1735230834677,"duration":0}},{"uid":"5437a74bb460e247","status":"passed","time":{"start":1735219695659,"stop":1735219695660,"duration":1}},{"uid":"42a40b59c191675b","status":"passed","time":{"start":1735218480273,"stop":1735218480273,"duration":0}},{"uid":"f0ee2a964657d0b5","status":"passed","time":{"start":1735146793724,"stop":1735146793724,"duration":0}}]},"tags":["MATHEMATICS","NUMBERS","PERFORMANCE","ALGORITHMS"]},"source":"4327cc8e74e9c8f6.json","parameterValues":[]}