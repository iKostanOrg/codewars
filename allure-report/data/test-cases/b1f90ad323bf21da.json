{"uid":"b1f90ad323bf21da","name":"Testing first_non_repeating_letter function","fullName":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter.FirstNonRepeatingLetterTestCase#test_first_non_repeating_letter_2_moonmen","historyId":"d27ed4efd4e361e83b910a4172116cfe","time":{"start":1735735771883,"stop":1735735771883,"duration":0},"description":"Testing a function named first_non_repeating_letter [with string='moonmen', expected='e'].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase","time":{"start":1735735771857,"stop":1735735771857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing a function named first_non_repeating_letter [with string='moonmen', expected='e'].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","steps":[{"name":"Enter test string: moonmen and verify the output: e","time":{"start":1735735771883,"stop":1735735771883,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"c591345b98de6ce6","name":"stdout","source":"c591345b98de6ce6.txt","type":"text/plain","size":38}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase::0","time":{"start":1735735771921,"stop":1735735771921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"STRINGS"},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"story","value":"First non-repeating character"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"SEARCH"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/52bc74d4ac05d0945d00054e","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4494a4dbc55ad1fd","status":"passed","time":{"start":1735735403554,"stop":1735735403554,"duration":0}},{"uid":"47f57bf4ac1e3206","status":"passed","time":{"start":1735230832816,"stop":1735230832816,"duration":0}},{"uid":"7b8f53a1f49c2828","status":"passed","time":{"start":1735219693816,"stop":1735219693816,"duration":0}},{"uid":"d4fcd78a7fb669f1","status":"passed","time":{"start":1735219149742,"stop":1735219149743,"duration":1}},{"uid":"439ea33f5483962c","status":"passed","time":{"start":1735218478597,"stop":1735218478598,"duration":1}},{"uid":"cb68f947a8174b54","status":"passed","time":{"start":1735146789204,"stop":1735146789204,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"fa4bfbc2f3c02ab","status":"passed","time":{"start":1735735403554,"stop":1735735403554,"duration":0}},{"uid":"c975079b75b37cbf","status":"passed","time":{"start":1735230832816,"stop":1735230832816,"duration":0}},{"uid":"39f59cfb297ae03e","status":"passed","time":{"start":1735219693816,"stop":1735219693816,"duration":0}},{"uid":"3c9237a9a14ade2","status":"passed","time":{"start":1735218478597,"stop":1735218478598,"duration":1}},{"uid":"9914141f3dc96fd6","status":"passed","time":{"start":1735146789204,"stop":1735146789204,"duration":0}}]},"tags":["STRINGS","SEARCH","ALGORITHMS"]},"source":"b1f90ad323bf21da.json","parameterValues":[]}