{
  "uid" : "3ca63ad029586690",
  "name" : "Testing flatten function",
  "fullName" : "kyu_5.flatten.test_flatten.FlattenTestCase#test_flatten",
  "historyId" : "7a974b0f364ee0a07e53a12f012266eb",
  "time" : {
    "start" : 1593811474673,
    "stop" : 1593811474675,
    "duration" : 2
  },
  "description" : "\n        For this exercise you will create a global flatten method.\n        The method takes in any number of arguments and flattens\n        them into a single array. If any of the arguments passed in\n        are an array then the individual objects within the array\n        will be flattened so that they exist at the same level as\n        the other arguments. Any nested arrays, no matter how deep,\n        should be flattened into the single array result.\n\n        The following are examples of how this function would be\n        used and what the expected results would be:\n\n        flatten(1, [2, 3], 4, 5, [6, [7]]) # returns [1, 2, 3, 4, 5, 6, 7]\n        flatten('a', ['b', 2], 3, None, [[4], ['c']]) # returns ['a', 'b', 2, 3, None, 4, 'c']\n        :return:\n        ",
  "descriptionHtml" : "<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1593811474672,
      "stop" : 1593811474672,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        For this exercise you will create a global flatten method.\n        The method takes in any number of arguments and flattens\n        them into a single array. If any of the arguments passed in\n        are an array then the individual objects within the array\n        will be flattened so that they exist at the same level as\n        the other arguments. Any nested arrays, no matter how deep,\n        should be flattened into the single array result.\n\n        The following are examples of how this function would be\n        used and what the expected results would be:\n\n        flatten(1, [2, 3], 4, 5, [6, [7]]) # returns [1, 2, 3, 4, 5, 6, 7]\n        flatten('a', ['b', 2], 3, None, [[4], ['c']]) # returns ['a', 'b', 2, 3, None, 4, 'c']\n        :return:\n        ",
    "descriptionHtml" : "<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>",
    "status" : "passed",
    "steps" : [ {
      "name" : "Enter test data #1 and verify the output",
      "time" : {
        "start" : 1593811474674,
        "stop" : 1593811474674,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter test data #2 and verify the output",
      "time" : {
        "start" : 1593811474674,
        "stop" : 1593811474674,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter test data #3 and verify the output",
      "time" : {
        "start" : 1593811474674,
        "stop" : 1593811474674,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter test data #4 and verify the output",
      "time" : {
        "start" : 1593811474674,
        "stop" : 1593811474674,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter test data #5 and verify the output",
      "time" : {
        "start" : 1593811474674,
        "stop" : 1593811474675,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "76cf50e06359890c",
      "name" : "stdout",
      "source" : "76cf50e06359890c.txt",
      "type" : "text/plain",
      "size" : 352
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "stepsCount" : 5,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1593811474677,
      "stop" : 1593811474677,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "epic",
    "value" : "5 kyu"
  }, {
    "name" : "suite",
    "value" : "Algorithms"
  }, {
    "name" : "feature",
    "value" : "Lists"
  }, {
    "name" : "tag",
    "value" : "ALGORITHMS"
  }, {
    "name" : "story",
    "value" : "flatten()"
  }, {
    "name" : "tag",
    "value" : "ARRAYS"
  }, {
    "name" : "subSuite",
    "value" : "Unit Tests"
  }, {
    "name" : "parentSuite",
    "value" : "Novice"
  }, {
    "name" : "host",
    "value" : "DESKTOP-RJASUD2"
  }, {
    "name" : "thread",
    "value" : "7000-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "kyu_5.flatten.test_flatten"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "Source/Kata",
    "url" : "https://www.codewars.com/kata/513fa1d75e4297ba38000003/train/python",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "6f852963fa8d1b75",
      "status" : "passed",
      "time" : {
        "start" : 1593736483725,
        "stop" : 1593736483727,
        "duration" : 2
      }
    }, {
      "uid" : "c0b9ad2825911b15",
      "status" : "passed",
      "time" : {
        "start" : 1592253256708,
        "stop" : 1592253256709,
        "duration" : 1
      }
    }, {
      "uid" : "a9da82dffc8d0006",
      "status" : "passed",
      "time" : {
        "start" : 1592253189342,
        "stop" : 1592253189344,
        "duration" : 2
      }
    }, {
      "uid" : "5b5b3ccaa1e4033b",
      "status" : "passed",
      "time" : {
        "start" : 1592096337005,
        "stop" : 1592096337006,
        "duration" : 1
      }
    }, {
      "uid" : "f78ed1c1ab87a661",
      "status" : "passed",
      "time" : {
        "start" : 1590956551165,
        "stop" : 1590956551167,
        "duration" : 2
      }
    }, {
      "uid" : "947a31da279284a8",
      "status" : "passed",
      "time" : {
        "start" : 1590952389907,
        "stop" : 1590952389908,
        "duration" : 1
      }
    }, {
      "uid" : "bd3c58a2efdb9e1e",
      "status" : "passed",
      "time" : {
        "start" : 1590447881094,
        "stop" : 1590447881095,
        "duration" : 1
      }
    }, {
      "uid" : "59a644fc579d2f8c",
      "status" : "passed",
      "time" : {
        "start" : 1590447341508,
        "stop" : 1590447341509,
        "duration" : 1
      }
    }, {
      "uid" : "875912c42a3d2095",
      "status" : "passed",
      "time" : {
        "start" : 1589829774813,
        "stop" : 1589829774814,
        "duration" : 1
      }
    }, {
      "uid" : "9076a05f2f4d43c2",
      "status" : "passed",
      "time" : {
        "start" : 1589770407749,
        "stop" : 1589770407751,
        "duration" : 2
      }
    }, {
      "uid" : "908d05727deea25",
      "status" : "passed",
      "time" : {
        "start" : 1589664524511,
        "stop" : 1589664524512,
        "duration" : 1
      }
    }, {
      "uid" : "d8857030416a63a0",
      "status" : "passed",
      "time" : {
        "start" : 1589664369578,
        "stop" : 1589664369579,
        "duration" : 1
      }
    }, {
      "uid" : "6d0d11798f27f921",
      "status" : "passed",
      "time" : {
        "start" : 1589664228636,
        "stop" : 1589664228637,
        "duration" : 1
      }
    }, {
      "uid" : "9bf75b71391e8fa5",
      "status" : "passed",
      "time" : {
        "start" : 1588788995731,
        "stop" : 1588788995732,
        "duration" : 1
      }
    }, {
      "uid" : "42398479a849de08",
      "status" : "passed",
      "time" : {
        "start" : 1588788581614,
        "stop" : 1588788581616,
        "duration" : 2
      }
    }, {
      "uid" : "c3a2183f3d2bf5ac",
      "status" : "passed",
      "time" : {
        "start" : 1588720911237,
        "stop" : 1588720911238,
        "duration" : 1
      }
    }, {
      "uid" : "d1dd39a184aa984",
      "status" : "passed",
      "time" : {
        "start" : 1588631655445,
        "stop" : 1588631655447,
        "duration" : 2
      }
    }, {
      "uid" : "cc7d66b632fe5358",
      "status" : "passed",
      "time" : {
        "start" : 1588631386281,
        "stop" : 1588631386283,
        "duration" : 2
      }
    }, {
      "uid" : "f52a730e0b056560",
      "status" : "passed",
      "time" : {
        "start" : 1588561974776,
        "stop" : 1588561974777,
        "duration" : 1
      }
    }, {
      "uid" : "a0f9ca9dffdf9038",
      "status" : "passed",
      "time" : {
        "start" : 1588486759595,
        "stop" : 1588486759596,
        "duration" : 1
      }
    }, {
      "uid" : "fb2c930a502209e4",
      "status" : "passed",
      "time" : {
        "start" : 1588369278802,
        "stop" : 1588369278804,
        "duration" : 2
      }
    }, {
      "uid" : "2f66e55172c873cb",
      "status" : "passed",
      "time" : {
        "start" : 1588308608599,
        "stop" : 1588308608600,
        "duration" : 1
      }
    }, {
      "uid" : "61ad53b514ea7c5d",
      "status" : "passed",
      "time" : {
        "start" : 1588207191369,
        "stop" : 1588207191371,
        "duration" : 2
      }
    }, {
      "uid" : "13612360f2151ed1",
      "status" : "passed",
      "time" : {
        "start" : 1588110161228,
        "stop" : 1588110161229,
        "duration" : 1
      }
    }, {
      "uid" : "581ed5a57e3c44a3",
      "status" : "passed",
      "time" : {
        "start" : 1587855251765,
        "stop" : 1587855251767,
        "duration" : 2
      }
    }, {
      "uid" : "620de68d700a7d0",
      "status" : "passed",
      "time" : {
        "start" : 1587775247328,
        "stop" : 1587775247329,
        "duration" : 1
      }
    }, {
      "uid" : "95c87a113ce7f686",
      "status" : "passed",
      "time" : {
        "start" : 1587692933565,
        "stop" : 1587692933567,
        "duration" : 2
      }
    }, {
      "uid" : "f6a534d53f11410a",
      "status" : "passed",
      "time" : {
        "start" : 1587689217244,
        "stop" : 1587689217245,
        "duration" : 1
      }
    }, {
      "uid" : "cfc9f9a0c98e1b2c",
      "status" : "passed",
      "time" : {
        "start" : 1587689048106,
        "stop" : 1587689048107,
        "duration" : 1
      }
    }, {
      "uid" : "cbe666d213b1b68d",
      "status" : "passed",
      "time" : {
        "start" : 1587507202562,
        "stop" : 1587507202563,
        "duration" : 1
      }
    }, {
      "uid" : "e85a7cefd505aadb",
      "status" : "passed",
      "time" : {
        "start" : 1587461190059,
        "stop" : 1587461190060,
        "duration" : 1
      }
    }, {
      "uid" : "111822811076343f",
      "status" : "passed",
      "time" : {
        "start" : 1586936996763,
        "stop" : 1586936996765,
        "duration" : 2
      }
    } ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 26,
        "unknown" : 0,
        "total" : 26
      },
      "items" : [ {
        "uid" : "81d7665181ae3ba4",
        "status" : "passed",
        "time" : {
          "start" : 1593736483725,
          "stop" : 1593736483727,
          "duration" : 2
        }
      }, {
        "uid" : "e87d382678c2553a",
        "status" : "passed",
        "time" : {
          "start" : 1593736483725,
          "stop" : 1593736483727,
          "duration" : 2
        }
      }, {
        "uid" : "18584917d3cfb606",
        "status" : "passed",
        "time" : {
          "start" : 1592253256708,
          "stop" : 1592253256709,
          "duration" : 1
        }
      }, {
        "uid" : "a3d5c276010550a6",
        "status" : "passed",
        "time" : {
          "start" : 1592096337005,
          "stop" : 1592096337006,
          "duration" : 1
        }
      }, {
        "uid" : "e821d570dd317597",
        "status" : "passed",
        "time" : {
          "start" : 1590952389907,
          "stop" : 1590952389908,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ "ALGORITHMS", "ARRAYS" ]
  },
  "source" : "3ca63ad029586690.json",
  "parameterValues" : [ ]
}