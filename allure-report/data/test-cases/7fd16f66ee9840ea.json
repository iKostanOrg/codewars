{"uid":"7fd16f66ee9840ea","name":"Testing dir_reduc function","fullName":"kyu_5.directions_reduction.test_directions_reduction.DirectionsReductionTestCase#test_directions_reduction_4","historyId":"00b50865085ac2f2e622428a6b5b9fda","time":{"start":1735219693692,"stop":1735219693693,"duration":1},"description":"dir_reduc function test suite [with test_array=['WEST', 'NORTH', 'EAST', 'EAST'...ORTH', 'NORTH', 'SOUTH', 'EAST'], expected=['WEST', 'NORTH', 'NORTH', 'EAST']].\n\n        Test a function dir_reduc which will take an array of\n        strings and returns an array of strings with the needless\n        directions removed (W<->E or S<->N side by side).\n\n        The Haskell version takes a list of directions with\n        data Direction = North | East | West | South.\n\n        The Clojure version returns nil when the path is\n        reduced to nothing.\n\n        The Rust version takes a slice of enum Direction\n        {NORTH, SOUTH, EAST, WEST}.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p> Test a function dir_reduc which will take an array of strings and returns an array of strings with the needless directions removed (W<->E or S<->N side by side).</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_DirectionsReductionTestCase","time":{"start":1735219693675,"stop":1735219693675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"dir_reduc function test suite [with test_array=['WEST', 'NORTH', 'EAST', 'EAST'...ORTH', 'NORTH', 'SOUTH', 'EAST'], expected=['WEST', 'NORTH', 'NORTH', 'EAST']].\n\n        Test a function dir_reduc which will take an array of\n        strings and returns an array of strings with the needless\n        directions removed (W<->E or S<->N side by side).\n\n        The Haskell version takes a list of directions with\n        data Direction = North | East | West | South.\n\n        The Clojure version returns nil when the path is\n        reduced to nothing.\n\n        The Rust version takes a slice of enum Direction\n        {NORTH, SOUTH, EAST, WEST}.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p> Test a function dir_reduc which will take an array of strings and returns an array of strings with the needless directions removed (W<->E or S<->N side by side).</p>","status":"passed","steps":[{"name":"Enter test data (['WEST', 'NORTH', 'NORTH', 'EAST']) and verify the output (['WEST', 'NORTH', 'NORTH', 'EAST']) vs expected (['WEST', 'NORTH', 'NORTH', 'EAST'])","time":{"start":1735219693692,"stop":1735219693693,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[{"uid":"f8fde3cb5d858067","name":"stdout","source":"f8fde3cb5d858067.txt","type":"text/plain","size":146}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":1,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_DirectionsReductionTestCase::0","time":{"start":1735219693693,"stop":1735219693693,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"subSuite","value":"Unit Tests"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"feature","value":"Lists"},{"name":"parentSuite","value":"Novice"},{"name":"suite","value":"Algorithms"},{"name":"epic","value":"5 kyu"},{"name":"story","value":"Directions Reduction"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"5232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.directions_reduction.test_directions_reduction"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/550f22f4d758534c1100025a","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"31cf08c63355ce96","status":"passed","time":{"start":1735219149627,"stop":1735219149627,"duration":0}},{"uid":"378a03cadda3c77c","status":"passed","time":{"start":1735218478454,"stop":1735218478455,"duration":1}},{"uid":"3486ad503231b11c","status":"passed","time":{"start":1735146788914,"stop":1735146788914,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"55f2ea689284e973","status":"passed","time":{"start":1735218478454,"stop":1735218478455,"duration":1}},{"uid":"c1367862d6e6db13","status":"passed","time":{"start":1735146788914,"stop":1735146788914,"duration":0}}]},"tags":["FUNDAMENTALS"]},"source":"7fd16f66ee9840ea.json","parameterValues":[]}