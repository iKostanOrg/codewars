{"uid":"cbfe2cdb8c7e0a40","name":"Testing dir_reduc function","fullName":"kyu_5.directions_reduction.test_directions_reduction.DirectionsReductionTestCase#test_directions_reduction_1","historyId":"848271652be7d2e2aeacf25b884d7476","time":{"start":1735230832691,"stop":1735230832692,"duration":1},"description":"dir_reduc function test suite [with test_array=['NORTH', 'WEST', 'SOUTH', 'EAST'], expected=['NORTH', 'WEST', 'SOUTH', 'EAST']].\n\n        Test a function dir_reduc which will take an array of\n        strings and returns an array of strings with the needless\n        directions removed (W<->E or S<->N side by side).\n\n        The Haskell version takes a list of directions with\n        data Direction = North | East | West | South.\n\n        The Clojure version returns nil when the path is\n        reduced to nothing.\n\n        The Rust version takes a slice of enum Direction\n        {NORTH, SOUTH, EAST, WEST}.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p> Test a function dir_reduc which will take an array of strings and returns an array of strings with the needless directions removed (W<->E or S<->N side by side).</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":4,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_DirectionsReductionTestCase","time":{"start":1735230832686,"stop":1735230832686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"description":"dir_reduc function test suite [with test_array=['NORTH', 'WEST', 'SOUTH', 'EAST'], expected=['NORTH', 'WEST', 'SOUTH', 'EAST']].\n\n        Test a function dir_reduc which will take an array of\n        strings and returns an array of strings with the needless\n        directions removed (W<->E or S<->N side by side).\n\n        The Haskell version takes a list of directions with\n        data Direction = North | East | West | South.\n\n        The Clojure version returns nil when the path is\n        reduced to nothing.\n\n        The Rust version takes a slice of enum Direction\n        {NORTH, SOUTH, EAST, WEST}.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p> Test a function dir_reduc which will take an array of strings and returns an array of strings with the needless directions removed (W<->E or S<->N side by side).</p>","status":"passed","steps":[{"name":"Enter test data (['NORTH', 'WEST', 'SOUTH', 'EAST']) and verify the output (['NORTH', 'WEST', 'SOUTH', 'EAST']) vs expected (['NORTH', 'WEST', 'SOUTH', 'EAST'])","time":{"start":1735230832691,"stop":1735230832692,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"attachments":[{"uid":"7e36f559091fedf5","name":"stdout","source":"7e36f559091fedf5.txt","type":"text/plain","size":146}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":true,"stepsCount":1},"afterStages":[{"name":"_unittest_setUpClass_fixture_DirectionsReductionTestCase::0","time":{"start":1735230832708,"stop":1735230832708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"severity","value":"normal"},{"name":"suite","value":"Algorithms"},{"name":"story","value":"Directions Reduction"},{"name":"feature","value":"Lists"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"5 kyu"},{"name":"subSuite","value":"Unit Tests"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"5532-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.directions_reduction.test_directions_reduction"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/550f22f4d758534c1100025a","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"56c4d881bb17c9fe","status":"passed","time":{"start":1735219693681,"stop":1735219693682,"duration":1}},{"uid":"f6f7f9176d7bfc4a","status":"passed","time":{"start":1735219149615,"stop":1735219149615,"duration":0}},{"uid":"a2b7492cc81032cf","status":"passed","time":{"start":1735218478442,"stop":1735218478443,"duration":1}},{"uid":"8cfc0c4f46356283","status":"passed","time":{"start":1735146788896,"stop":1735146788898,"duration":2}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"ca01b934aab02917","status":"passed","time":{"start":1735219693681,"stop":1735219693682,"duration":1}},{"uid":"c75023af8df8b490","status":"passed","time":{"start":1735218478442,"stop":1735218478443,"duration":1}},{"uid":"53738dfb1aab0405","status":"passed","time":{"start":1735146788896,"stop":1735146788898,"duration":2}}]},"tags":["FUNDAMENTALS"]},"source":"cbfe2cdb8c7e0a40.json","parameterValues":[]}