{"uid":"23eb5d3f6b27eccd","name":"Testing the 'find_missing_number' function","fullName":"kyu_6.number_zoo_patrol.test_find_missing_number.FindMissingNumberTestCase#test_find_missing_number_2","historyId":"bd9c9dbe286e2a70c69f0bfbc6093ee2","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"description":"Testing 'find_missing_number' function with various test data [with numbers=[1, 2, 4], expected=3].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing 'find_missing_number' function with various test data [with numbers=[1, 2, 4], expected=3].\n\n        Test a function that should take a shuffled list of\n        unique numbers from 1 to n with one element missing\n        (which can be any number including n). Should return\n        this missing number.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Test a function that should take a shuffled list of unique numbers from 1 to n with one element missing (which can be any number including n). The function should return the missing number.</p>","status":"passed","steps":[{"name":"Enter a list and verify the expected output: 3 vs actual result: 3","time":{"start":1735735773897,"stop":1735735773897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"b5e28702359cc2e4","name":"stdout","source":"b5e28702359cc2e4.txt","type":"text/plain","size":48}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FindMissingNumberTestCase::0","time":{"start":1735735773917,"stop":1735735773917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"NUMBERS"},{"name":"story","value":"Number Zoo Patrol"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"PERFORMANCE"},{"name":"feature","value":"Math"},{"name":"subSuite","value":"Unit Tests"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"6 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"MATHEMATICS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_6.number_zoo_patrol.test_find_missing_number"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/5276c18121e20900c0000235","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"742e4c291fffe5a4","status":"passed","time":{"start":1735735405437,"stop":1735735405437,"duration":0}},{"uid":"d1347bd423b38e0b","status":"passed","time":{"start":1735230834681,"stop":1735230834682,"duration":1}},{"uid":"626194df1a20f25e","status":"passed","time":{"start":1735219695663,"stop":1735219695664,"duration":1}},{"uid":"22f15dce6b76838d","status":"passed","time":{"start":1735219151634,"stop":1735219151635,"duration":1}},{"uid":"1ae31f99cf833a17","status":"passed","time":{"start":1735218480276,"stop":1735218480276,"duration":0}},{"uid":"928892eb905297b9","status":"passed","time":{"start":1735146793734,"stop":1735146793736,"duration":2}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"327cf36e372b7455","status":"passed","time":{"start":1735735405437,"stop":1735735405437,"duration":0}},{"uid":"a4f3cf5edcc46723","status":"passed","time":{"start":1735230834681,"stop":1735230834682,"duration":1}},{"uid":"ea8559925d527d78","status":"passed","time":{"start":1735219695663,"stop":1735219695664,"duration":1}},{"uid":"b9a7ce5ac5c554d1","status":"passed","time":{"start":1735218480276,"stop":1735218480276,"duration":0}},{"uid":"fa55ac66ec613241","status":"passed","time":{"start":1735146793734,"stop":1735146793736,"duration":2}}]},"tags":["MATHEMATICS","NUMBERS","PERFORMANCE","ALGORITHMS"]},"source":"23eb5d3f6b27eccd.json","parameterValues":[]}