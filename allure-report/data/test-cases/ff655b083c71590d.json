{"uid":"ff655b083c71590d","name":"Testing list_squared function","fullName":"kyu_5.integers_recreation_one.test_list_squared.ListSquaredTestCase#test_flatten_3","historyId":"40a4c6ab0bdd8cf2025033787ff7e21a","time":{"start":1735735771976,"stop":1735735772024,"duration":48},"description":"Testing list_squared function [with m=960, n=5024, expected=[[1434, 2856100], [1673, 2856100...880, 4884100], [4264, 24304900]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase","time":{"start":1735735771959,"stop":1735735771959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing list_squared function [with m=960, n=5024, expected=[[1434, 2856100], [1673, 2856100...880, 4884100], [4264, 24304900]]].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Given two integers m, n (1 <= m <= n) we want to find all integers between m and n whose sum of squared divisors is itself a square.</p>","status":"passed","steps":[{"name":"Enter test data and verify the output...","time":{"start":1735735771976,"stop":1735735772024,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"43a94fcccc54bfbd","name":"stdout","source":"43a94fcccc54bfbd.txt","type":"text/plain","size":192}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_ListSquaredTestCase::0","time":{"start":1735735772111,"stop":1735735772111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Optimization"},{"name":"story","value":"Integers: Recreation One"},{"name":"tag","value":"OPTIMIZATION"},{"name":"subSuite","value":"Unit Tests"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ARRAYS"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.integers_recreation_one.test_list_squared"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/55aa075506463dac6600010d","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d6d2a58e52a2880","status":"passed","time":{"start":1735735403643,"stop":1735735403675,"duration":32}},{"uid":"ae5df6e3f9900df6","status":"passed","time":{"start":1735230832892,"stop":1735230832920,"duration":28}},{"uid":"e6763d3fac98f8ab","status":"passed","time":{"start":1735219693895,"stop":1735219693923,"duration":28}},{"uid":"1c09132ebe330c58","status":"passed","time":{"start":1735219149825,"stop":1735219149858,"duration":33}},{"uid":"4ba1aa0029ab5997","status":"passed","time":{"start":1735218478706,"stop":1735218478739,"duration":33}},{"uid":"c0c4a95a51f1c7ec","status":"passed","time":{"start":1735146789415,"stop":1735146789503,"duration":88}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"e4219f44b20a78f7","status":"passed","time":{"start":1735735403643,"stop":1735735403675,"duration":32}},{"uid":"15527bdeea67a403","status":"passed","time":{"start":1735230832892,"stop":1735230832920,"duration":28}},{"uid":"4c94cce681434b00","status":"passed","time":{"start":1735219693895,"stop":1735219693923,"duration":28}},{"uid":"5b534cef633688f6","status":"passed","time":{"start":1735218478706,"stop":1735218478739,"duration":33}},{"uid":"1c1f7063d7f16b81","status":"passed","time":{"start":1735146789415,"stop":1735146789503,"duration":88}}]},"tags":["FUNDAMENTALS","OPTIMIZATION","ALGORITHMS","ARRAYS"]},"source":"ff655b083c71590d.json","parameterValues":[]}