{"uid":"a1d81370643861f6","name":"Testing increment_string function","fullName":"kyu_5.string_incrementer.test_increment_string.StringIncrementerTestCase#test_increment_string_6_","historyId":"cfe575a85d133ecfa851cfeff8280eb9","time":{"start":1735735772469,"stop":1735735772469,"duration":0},"description":"Testing a function named increment_string [with string='', expected='1'].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>- If the string already ends with a number, the number should be incremented by 1.<br/>- If the string does not end with a number. the number 1 should be appended to the new string.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_StringIncrementerTestCase","time":{"start":1735735772443,"stop":1735735772443,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing a function named increment_string [with string='', expected='1'].\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>- If the string already ends with a number, the number should be incremented by 1.<br/>- If the string does not end with a number. the number 1 should be appended to the new string.</p>","status":"passed","steps":[{"name":"Enter test string:  and verify the output: 1","time":{"start":1735735772469,"stop":1735735772469,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"84412213d056a89d","name":"stdout","source":"84412213d056a89d.txt","type":"text/plain","size":42}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_StringIncrementerTestCase::0","time":{"start":1735735772485,"stop":1735735772485,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"REGULAR EXPRESSIONS"},{"name":"tag","value":"DECLARATIVE PROGRAMMING"},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"tag","value":"STRINGS PARSING"},{"name":"story","value":"String incrementer"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"ADVANCED LANGUAGE FEATURES"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.string_incrementer.test_increment_string"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/54a91a4883a7de5d7800009c","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"572dbf4c939aa72c","status":"passed","time":{"start":1735735404040,"stop":1735735404040,"duration":0}},{"uid":"2f7da7dcf1bb3ddb","status":"passed","time":{"start":1735230833272,"stop":1735230833273,"duration":1}},{"uid":"a0fbb6992fef3287","status":"passed","time":{"start":1735219694307,"stop":1735219694307,"duration":0}},{"uid":"1176d080fc89621b","status":"passed","time":{"start":1735219150234,"stop":1735219150234,"duration":0}},{"uid":"a6dd18579b3a48b1","status":"passed","time":{"start":1735218479065,"stop":1735218479066,"duration":1}},{"uid":"edfb2433d13e7d4a","status":"passed","time":{"start":1735146790343,"stop":1735146790347,"duration":4}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"c1ae133c2f57d2c7","status":"passed","time":{"start":1735735404040,"stop":1735735404040,"duration":0}},{"uid":"343a8af9560c4692","status":"passed","time":{"start":1735230833272,"stop":1735230833273,"duration":1}},{"uid":"874bf64286f42685","status":"passed","time":{"start":1735219694307,"stop":1735219694307,"duration":0}},{"uid":"13c1a37f298d1716","status":"passed","time":{"start":1735218479065,"stop":1735218479066,"duration":1}},{"uid":"4e9a8c1e1d75b2fb","status":"passed","time":{"start":1735146790343,"stop":1735146790347,"duration":4}}]},"tags":["FUNDAMENTALS","STRINGS PARSING","ADVANCED LANGUAGE FEATURES","DECLARATIVE PROGRAMMING","ALGORITHMS","REGULAR EXPRESSIONS"]},"source":"a1d81370643861f6.json","parameterValues":[]}