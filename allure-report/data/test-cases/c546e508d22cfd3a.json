{"uid":"c546e508d22cfd3a","name":"String with no duplicate chars","fullName":"kyu_6.format_string_of_names.test_namelist.NamelistTestCase#test_namelist_0","historyId":"a2a9b848e527f7046c963058385e9547","time":{"start":1735219695527,"stop":1735219695528,"duration":1},"description":"Test namelist [with names=[{'name': 'Bart'}, {'name': 'Lis...e': 'Homer'}, {'name': 'Marge'}], expected='Bart, Lisa, Maggie, Homer & Marge', message='Must work with many names'].\n\n        Given:\n        an array containing hashes of names\n\n        Return:\n        a string formatted as a list of names separated by commas\n        except for the last two names, which should be separated\n        by an ampersand.\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Should a string formatted as a list of names separated by commas except for the last two names, which should be separated by an ampersand.</p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_NamelistTestCase","time":{"start":1735219695527,"stop":1735219695527,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"Test namelist [with names=[{'name': 'Bart'}, {'name': 'Lis...e': 'Homer'}, {'name': 'Marge'}], expected='Bart, Lisa, Maggie, Homer & Marge', message='Must work with many names'].\n\n        Given:\n        an array containing hashes of names\n\n        Return:\n        a string formatted as a list of names separated by commas\n        except for the last two names, which should be separated\n        by an ampersand.\n\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>Should a string formatted as a list of names separated by commas except for the last two names, which should be separated by an ampersand.</p>","status":"passed","steps":[{"name":"Process input consist of names: [{'name': 'Bart'}, {'name': 'Lisa'}, {'name': 'Maggie'}, {'name': 'Homer'}, {'name': 'Marge'}] and verify the output: Bart, Lisa, Maggie, Homer & Marge.","time":{"start":1735219695527,"stop":1735219695528,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[{"uid":"97ace0c28d96d03","name":"stdout","source":"97ace0c28d96d03.txt","type":"text/plain","size":235}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":1,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_NamelistTestCase::0","time":{"start":1735219695546,"stop":1735219695546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"story","value":"Format a string of names like 'Bart, Lisa & Maggie'."},{"name":"subSuite","value":"Unit Tests"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"epic","value":"6 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"STRINGS"},{"name":"suite","value":"Algorithms"},{"name":"tag","value":"FORMATTING"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"5232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_6.format_string_of_names.test_namelist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/53368a47e38700bd8300030d","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"dc07f384fe385cda","status":"passed","time":{"start":1735219151478,"stop":1735219151478,"duration":0}},{"uid":"b6aace5d68a17f7f","status":"passed","time":{"start":1735218480157,"stop":1735218480157,"duration":0}},{"uid":"c5fe7910914d259c","status":"passed","time":{"start":1735146793386,"stop":1735146793386,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"512b67c4f096221e","status":"passed","time":{"start":1735218480157,"stop":1735218480157,"duration":0}},{"uid":"adc023dc1db0114d","status":"passed","time":{"start":1735146793386,"stop":1735146793386,"duration":0}}]},"tags":["STRINGS","FORMATTING","FUNDAMENTALS","ALGORITHMS"]},"source":"c546e508d22cfd3a.json","parameterValues":[]}