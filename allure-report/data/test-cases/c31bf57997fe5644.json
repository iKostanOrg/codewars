{"uid":"c31bf57997fe5644","name":"test_smallest_04","fullName":"kyu_5.find_the_smallest.test_smallest.FindSmallestTestCase#test_smallest_04","historyId":"23751669e3d71356c8e99af7ce79191a","time":{"start":1735219149702,"stop":1735219149702,"duration":0},"description":"Testing smallest function with various test data [with n=296837, expected=[239687, 4, 1]].\n\n        Test a function `smallest` which will return an array or a\n        tuple or a string depending on the language (see \"Sample Tests\").\n        :return:\n        ","descriptionHtml":"<p>Testing smallest function with various test data [with n=296837, expected=[239687, 4, 1]].</p>\n<pre><code>    Test a function `smallest` which will return an array or a\n    tuple or a string depending on the language (see &quot;Sample Tests&quot;).\n    :return:\n</code></pre>\n","status":"skipped","statusMessage":"Skipped: The solution is not ready","statusTrace":"('C:\\\\Users\\\\Egor\\\\Documents\\\\GitHub\\\\codewars\\\\kyu_5\\\\find_the_smallest\\\\test_smallest.py', 34, 'Skipped: The solution is not ready')","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"Find the smallest"},{"name":"feature","value":"Lists"},{"name":"subSuite","value":"Unit Tests"},{"name":"suite","value":"Algorithms"},{"name":"parentSuite","value":"Novice"},{"name":"epic","value":"5 kyu"},{"name":"tag","value":"FUNDAMENTALS"},{"name":"tag","value":"@pytest.mark.skip(reason='The solution is not ready')"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"9336-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.find_the_smallest.test_smallest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/573992c724fc289553000e95","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["FUNDAMENTALS","@pytest.mark.skip(reason='The solution is not ready')"]},"source":"c31bf57997fe5644.json","parameterValues":[]}