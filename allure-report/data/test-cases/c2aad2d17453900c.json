{"uid":"c2aad2d17453900c","name":"Testing first_non_repeating_letter function","fullName":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter.FirstNonRepeatingLetterTestCase#test_first_non_repeating_letter_3_","historyId":"49774f92aa264268d21e7e5bd647f282","time":{"start":1735735771889,"stop":1735735771889,"duration":0},"description":"Testing a function named first_non_repeating_letter [with string='', expected=''].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase","time":{"start":1735735771857,"stop":1735735771857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Testing a function named first_non_repeating_letter [with string='', expected=''].\n\n        The function takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ","descriptionHtml":"<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p></p>","status":"passed","steps":[{"name":"Enter test string:  and verify the output: ","time":{"start":1735735771889,"stop":1735735771889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"ba0eac55dfc9e5a","name":"stdout","source":"ba0eac55dfc9e5a.txt","type":"text/plain","size":30}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_FirstNonRepeatingLetterTestCase::0","time":{"start":1735735771921,"stop":1735735771921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"STRINGS"},{"name":"suite","value":"Algorithms"},{"name":"subSuite","value":"Unit Tests"},{"name":"story","value":"First non-repeating character"},{"name":"feature","value":"String"},{"name":"tag","value":"ALGORITHMS"},{"name":"epic","value":"5 kyu"},{"name":"parentSuite","value":"Novice"},{"name":"tag","value":"SEARCH"},{"name":"host","value":"DESKTOP-4I7EDL5"},{"name":"thread","value":"12132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"kyu_5.first_non_repeating_character.test_first_non_repeating_letter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Source/Kata","url":"https://www.codewars.com/kata/52bc74d4ac05d0945d00054e","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"540f4887745b0386","status":"passed","time":{"start":1735735403556,"stop":1735735403556,"duration":0}},{"uid":"2277e66835674f57","status":"passed","time":{"start":1735230832821,"stop":1735230832821,"duration":0}},{"uid":"2eab7ac58f3af097","status":"passed","time":{"start":1735219693820,"stop":1735219693820,"duration":0}},{"uid":"e4d86efc8f404ca3","status":"passed","time":{"start":1735219149749,"stop":1735219149749,"duration":0}},{"uid":"57cdb75060df3b35","status":"passed","time":{"start":1735218478604,"stop":1735218478605,"duration":1}},{"uid":"4996d5bbdde8278d","status":"passed","time":{"start":1735146789219,"stop":1735146789222,"duration":3}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"604eebb445539696","status":"passed","time":{"start":1735735403556,"stop":1735735403556,"duration":0}},{"uid":"d41479f5b0d15f79","status":"passed","time":{"start":1735230832821,"stop":1735230832821,"duration":0}},{"uid":"184f571ac8825c03","status":"passed","time":{"start":1735219693820,"stop":1735219693820,"duration":0}},{"uid":"948de640929f885f","status":"passed","time":{"start":1735218478604,"stop":1735218478605,"duration":1}},{"uid":"3b45ad5f1a14d15a","status":"passed","time":{"start":1735146789219,"stop":1735146789222,"duration":3}}]},"tags":["STRINGS","SEARCH","ALGORITHMS"]},"source":"c2aad2d17453900c.json","parameterValues":[]}